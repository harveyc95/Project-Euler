/* Project Euler Problem 12 - https://projecteuler.net/problem=12
 * Highly divisible triangular number
 * The sequence of triangle numbers is generated by adding the natural numbers. 
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
 * The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * Let us list the factors of the first seven triangle numbers:
 * 
 *  1: 1
 *  3: 1,3
 *  6: 1,2,3,
 *  10: 1,2,5,1
 *  15: 1,3,5,1
 *  21: 1,3,7,21
 *  28: 1,2,4,7,14,28
 *  
 *  We can see that 28 is the first triangle number to have over five divisors.
 *  What is the value of the first triangle number to have over five hundred divisors?
 * 
 * Created by Harvey Chen on 09/10/2015.
 * Copyright (c) 2015 Harvey Chen. All rights reserved.
 */

#include <stdio.h>
#include <math.h>

int triangleNum (int n);
int numOfFactors (int n);

int main () {
	bool notFound = true;
	int ithTriangle = 1;
	int triangleNumber = 0;
	while (notFound) {
		triangleNumber = triangleNum(ithTriangle);
		if (numOfFactors(triangleNumber) > 500)
			notFound = false;
		ithTriangle++;
	}
	printf("%d is the ith%d triangle number with %d factors\n", triangleNumber, ithTriangle, numOfFactors(triangleNumber));
}

int triangleNum (int n) {
	int N = n*(n+1)/2;
	return N;
}
int numOfFactors (int n) {
	int count = 0;
	for (int i = 1; i < sqrt(n); i++) {
		if (n%i == 0)
			count += 2;
	}
	return count;
}